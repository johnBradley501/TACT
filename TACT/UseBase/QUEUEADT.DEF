DEFINITION MODULE queueadt;

(* copyright (c) 1987-96 John Bradley, Lidio Presutti, University of Toronto *)

(* Licensed under the Apache License, Version 2.0 (the "License");             *)
(* you may not use this file except in compliance with the License.            *)
(* You may obtain a copy of the License at                                     *)
(* http://www.apache.org/licenses/LICENSE-2.0                                  *)
(*                                                                             *)
(* Unless required by applicable law or agreed to in writing, software         *)
(* distributed under the License is distributed on an "AS IS" BASIS,           *)
(* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    *)
(* See the License for the specific language governing permissions and         *)
(* limitations under the License.                                              *)

(* Modelled after version in "Software Development with Modula-2,
Gary A.Ford & Richard S. Wiener, Wiley Press 1986, p. 246 *)

(* This module defines the public interface of the queue abstract
data type.  It assumes the type of data to be stored in the queue
are ADDRESS's.  Note that queue is an opaque type.  *)

FROM SYSTEM IMPORT ADDRESS;

(*
EXPORT QUALIFIED
 (* type *) queue,
 (* proc *) makeempty, empty, insert, remove, define, destroy;
*)

TYPE
  queue;

PROCEDURE makeempty(VAR q   : queue  (* in/out *) );

PROCEDURE empty(q: queue (* in *) ): BOOLEAN;

PROCEDURE insert(VAR q   : queue   (* in/out *);
                     item: ADDRESS (* in     *));

PROCEDURE remove(VAR q   : queue   (* in/out *);
                 VAR item: ADDRESS (* out    *));

PROCEDURE define(VAR q   : queue   (* out    *));

PROCEDURE destroy(VAR q  : queue   (* in/out *));

END queueadt.
