DEFINITION MODULE SearchUtils;

(* copyright (c) 1987-96 John Bradley, Lidio Presutti, University of Toronto *)

(* Licensed under the Apache License, Version 2.0 (the "License");             *)
(* you may not use this file except in compliance with the License.            *)
(* You may obtain a copy of the License at                                     *)
(* http://www.apache.org/licenses/LICENSE-2.0                                  *)
(*                                                                             *)
(* Unless required by applicable law or agreed to in writing, software         *)
(* distributed under the License is distributed on an "AS IS" BASIS,           *)
(* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    *)
(* See the License for the specific language governing permissions and         *)
(* limitations under the License.                                              *)

FROM DataLinkModule IMPORT DataLink, DataLinkArrayPntr, DataLinkType;
FROM TACTListModule IMPORT TACTList;

CONST
   LeftSide = 0;
   RightSide = 1;

TYPE
   SearchResultType = (SearchOK, SearchWarned, SearchFailed, SearchStoppedByUser);

   SimilData = RECORD
      Size:       CARDINAL;
      Percentage: CARDINAL;
      Pattern:    ARRAY[0..255] OF CHAR;
   END;
   SimilDataPntr = POINTER TO SimilData;

   PhraseBase = RECORD
      Offset:    CARDINAL;
      Access:    DataLinkType;
   END;
   BinaryDataPntr = POINTER TO ARRAY[0..1] OF DataLinkType;
   PhraseBaseArray = ARRAY[0..49] OF PhraseBase;
   PhraseDataPntr = POINTER TO PhraseData;
   PhraseData = RECORD
      Size:       CARDINAL;
      OutOffset:  INTEGER; (* could be negative j.b. *)
      InLinkData: PhraseBaseArray;
   END;

VAR
   SearchResult:    SearchResultType;
   CurrPosOnSelListArray : CARDINAL ;
   NumberInSelListArray  : CARDINAL ;
   SelectedListArray	 : ARRAY[1..10] OF TACTList ;

PROCEDURE UserSuspendsSearch(): BOOLEAN;

PROCEDURE MergeDataLinks(InLinks: DataLinkArrayPntr;
                         NoIn:    CARDINAL;
                         OutLink: DataLink;
                         Data:    ADDRESS); (* not used, pass as NIL *)

PROCEDURE DoSpanCollocation(InData:  DataLinkArrayPntr; (* always 1 only *)
                            Numb:    CARDINAL;          (* always 1 only *)
                            OutData: DataLink;
                            Info:    ADDRESS); (* should always be NIL *)

PROCEDURE DoPos(InData:  DataLinkArrayPntr; (* always 1 only *)
                Numb:    CARDINAL;          (* always 1 only *)
                OutData: DataLink;
                Info:    ADDRESS); (* should always be NIL *)

PROCEDURE BuildSimilByParsing(  VAR RuleNo	: CARDINAL;
                                VAR SPntr       : SimilDataPntr): BOOLEAN;

PROCEDURE DoSimil(InData:  DataLinkArrayPntr; (* always 1 only *)
                  Numb:    CARDINAL;          (* always 1 only *)
                  OutData: DataLink;
                  Info:    ADDRESS); (* SimilDataItemPntr *)

PROCEDURE DisposeSimilDataPntr(VAR Item: ADDRESS); (* SimilDataItemPntr *)

PROCEDURE PhraseSearch(InData:  DataLinkArrayPntr;
                       Numb:    CARDINAL;
                       OutData: DataLink;
                       Info:    ADDRESS); (* PhraseDataPntr *)

PROCEDURE DisposePhraseData(VAR Item: ADDRESS); (* PhraseDataPntr *)

PROCEDURE NewPhraseDataPntr(Numb:    CARDINAL;
                        VAR InData:  ARRAY OF PhraseBase (* read only *)):
                            PhraseDataPntr;

PROCEDURE WithInRange (InData:  DataLinkArrayPntr; (* always 2 only *)
                       Numb:    CARDINAL;  (* always 2 only *)
                       OutData: DataLink;
                       Info:    ADDRESS); (* BinaryDataPntr *)

PROCEDURE NotWithInRange (InData:  DataLinkArrayPntr; (* always 2 only *)
                          Numb:    CARDINAL;          (* always 2 only *)
                          OutData: DataLink;
                          Info:    ADDRESS); (* BinaryDataPntr *)

PROCEDURE ListNegateProc (InData:  DataLinkArrayPntr; (* always 2 only *)
                          Numb:    CARDINAL;          (* always 2 only *)
                          OutData: DataLink;
                          Info:    ADDRESS); (* NIL *)

PROCEDURE DisposeBinaryDataPntr(VAR Item: ADDRESS); (* PhraseDataPntr *)
END SearchUtils.
