DEFINITION MODULE BitOps ;

(* copyright (c) 1987-96 John Bradley, Lidio Presutti, University of Toronto *)

(* Licensed under the Apache License, Version 2.0 (the "License");             *)
(* you may not use this file except in compliance with the License.            *)
(* You may obtain a copy of the License at                                     *)
(* http://www.apache.org/licenses/LICENSE-2.0                                  *)
(*                                                                             *)
(* Unless required by applicable law or agreed to in writing, software         *)
(* distributed under the License is distributed on an "AS IS" BASIS,           *)
(* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    *)
(* See the License for the specific language governing permissions and         *)
(* limitations under the License.                                              *)

FROM GlobalDefs IMPORT StrAny ;

(*
EXPORT
   (* Types *) PackedStrType,
   (* Procs *) Pack, UnPack ;
*)

TYPE
   PackedStrType = RECORD
		(* A length byte is required since the packed string may have
		   a 0C in the middle of a result string *)
		PackedLen	: SHORTCARD ;
		PackedStr	: StrAny ;
	END ;

PROCEDURE Pack( VAR InText : ARRAY OF CHAR;	(* VAR here for pass by ref usage *)
		VAR OutText: PackedStrType;
		    NoBits : CARDINAL ) ;

PROCEDURE UnPack( VAR InText : PackedStrType;	(* VAR here for pass by ref usage *)
		  VAR OutText: ARRAY OF CHAR;
		      NoBits : CARDINAL  ) ;

PROCEDURE InitHuffCodeTable ;

PROCEDURE InitHuffDecodeTable ;

PROCEDURE Encode( VAR InBytes : ARRAY OF BYTE;		(* not modified -- pass by value *)
		  VAR OutBytes: ARRAY OF BYTE;
		      InLen   : CARDINAL;
		  VAR OutLen  : CARDINAL ) ;

PROCEDURE Decode( VAR InBytes : ARRAY OF BYTE;		(* not modified -- pass by value *)
		  VAR OutBytes: ARRAY OF BYTE;
		      OutLen  : CARDINAL ) ;

END BitOps .