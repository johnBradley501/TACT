DEFINITION MODULE WWWUtils;
(* copyright (c) 1989-96 John Bradley, Geoffrey Rockwell, Lidio Presutti, University of Toronto *)

(* Licensed under the Apache License, Version 2.0 (the "License");             *)
(* you may not use this file except in compliance with the License.            *)
(* You may obtain a copy of the License at                                     *)
(* http://www.apache.org/licenses/LICENSE-2.0                                  *)
(*                                                                             *)
(* Unless required by applicable law or agreed to in writing, software         *)
(* distributed under the License is distributed on an "AS IS" BASIS,           *)
(* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    *)
(* See the License for the specific language governing permissions and         *)
(* limitations under the License.                                              *)


FROM HyperDataModel IMPORT HRecPntr;
IMPORT FIO;

(*RES OLD HLP 3
<pre>
*)
CONST
   StartPre = (*RES REM INS*) 3 ;
(*RES OLD HLP 4
</pre>
*)
   EndPre = (*RES REM INS*) 4 ; (* 6:30 *)

TYPE
   RequestMethodType = (Undefined, GETMethod, POSTMethod);

PROCEDURE CheckRequestMethod(): RequestMethodType;


(*
When a POST query is received, the REQUEST_METHOD environment
variable is set to POST, and httpd creates three environment
variables that are not otherwise present:

  CONTENT_TYPE=application/x-www-form-urlencoded
  CONTENT_LENGTH=nnnn
  CONTENT_FILE=C:\TEMP\HSXXXXXX.INP

CONTENT_LENGTH is set to exactly the number of bytes in the
content file. The CONTENT_TYPE is as shown for Mosaic form
output. Other types may appear in the future.

*)

TYPE
   ParseData;

VAR
   pd:    ParseData;

PROCEDURE InitialParseData(VAR PD: ParseData);

PROCEDURE CreateParseData(VAR PD: ParseData; str: ARRAY OF CHAR);

PROCEDURE File2ParseData(VAR PD: ParseData;
                              f: FIO.File;
                              l: BOOLEAN);

PROCEDURE DestroyParseData(VAR PD: ParseData);

PROCEDURE ParseDataDefined(PD: ParseData): BOOLEAN;

PROCEDURE GetItem(Inp: ParseData;
              VAR Next: ParseData;
              VAR Name: ARRAY OF CHAR;
              VAR Value: ARRAY OF CHAR);

PROCEDURE FindItem(Inp: ParseData;
               VAR Next: ParseData;
                   Name: ARRAY OF CHAR;
               VAR Value: ARRAY OF CHAR): BOOLEAN;

PROCEDURE FindItemCard(Inp: ParseData;
                   VAR Next: ParseData;
                       Name: ARRAY OF CHAR;
                   VAR Value: CARDINAL): BOOLEAN;

(* ----------------------------------------------- *)

PROCEDURE ConvertWWWData(Inp: ARRAY OF CHAR;
                     VAR Out: ARRAY OF CHAR);

PROCEDURE MakeBasicQuery(qtext: ARRAY OF CHAR;
                         ptext: ARRAY OF CHAR;
                         ltext: ARRAY OF CHAR;
                    VAR rslt:  ARRAY OF CHAR);

PROCEDURE MakeQueryLink(in:    HRecPntr;
                        type:  CHAR;
                        ltext: ARRAY OF CHAR;
                    VAR rslt:  ARRAY OF CHAR);

PROCEDURE MakeQueryDest(ltext: ARRAY OF CHAR;
                    VAR rslt:  ARRAY OF CHAR);

PROCEDURE ParseQueryString(in:   ARRAY OF CHAR;
                       VAR hrec: HRecPntr;
                       VAR type: CHAR);

PROCEDURE DoStartPre();

PROCEDURE DoEndPre();

END WWWUtils.