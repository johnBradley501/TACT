DEFINITION MODULE Lists ;

(* copyright (c) 1987-96 John Bradley, Lidio Presutti, University of Toronto *)

(* Licensed under the Apache License, Version 2.0 (the "License");             *)
(* you may not use this file except in compliance with the License.            *)
(* You may obtain a copy of the License at                                     *)
(* http://www.apache.org/licenses/LICENSE-2.0                                  *)
(*                                                                             *)
(* Unless required by applicable law or agreed to in writing, software         *)
(* distributed under the License is distributed on an "AS IS" BASIS,           *)
(* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.    *)
(* See the License for the specific language governing permissions and         *)
(* limitations under the License.                                              *)
(*# data(const_in_code=>on) *)

FROM SYSTEM IMPORT ADDRESS;

(*
EXPORT QUALIFIED
  (* type   *)   ListPointer,
  (* proc   *)   NewList, CopyListPointer, FreeListPointer,
                 AddBelow, DeleteListItem, GetData,
                 MoveUp, MoveDown, SetToTop, SetToLast, AtTop;
*)

TYPE
    ListPointer;

PROCEDURE NewList(VAR Ptr:     ListPointer);

PROCEDURE CopyListPointer(Old:   ListPointer;
                      VAR New:   ListPointer);

PROCEDURE FreeListPointer(VAR Ptr:   ListPointer);

PROCEDURE AddBelow(Ptr:   ListPointer;
                   Data:  ADDRESS);

PROCEDURE DeleteListItem(VAR Ptr:     ListPointer);

PROCEDURE GetData(Ptr:        ListPointer;
              VAR Data:       ADDRESS);

PROCEDURE MoveUp(VAR Ptr:     ListPointer): BOOLEAN;

PROCEDURE MoveDown(VAR Ptr:     ListPointer): BOOLEAN;

PROCEDURE SetToTop(VAR Ptr:     ListPointer);
(* sets it to "one" list item above real top, thus need to do one MoveDown *)

PROCEDURE SetToLast(VAR Ptr:     ListPointer);

PROCEDURE AtTop(Ptr:   ListPointer): BOOLEAN;
END  Lists .
